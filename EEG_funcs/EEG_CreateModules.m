function EEG_CreateModules()
%EEG Create parameters necessary for analysis structure
%Make defaultParamters.mat, storing analysis related parameters
%NOTE: It is not necessary to run this script every time
% Task cell table structure:
% Phase_Name:           name of the phase to be epoched
%
% Markers:              markers will be inserted at current phase
%
% Marker_Onset:         marker insert timing (either at the 
%                       begining ('ON') or at the end ('OFF') of 
%                       the marker being presented)
%
% Buffer:               Buffer(1): baseline duration
%                       Buffer(2): duration of time frequency buffer 
%                       to reduce edge effect


%saving directory of the modules
base_dir='/nfs/jong_exp/EEG_PFC/';
Save_dir=[base_dir,'scripts/modules/'];
addpath(genpath([base_dir,'scripts/']));

%% check if module already existed before creating one
if exist([Save_dir,'defaultParams.mat'],'file')
    inquiry=input('defaultParams.mat already existed. Replace? (Y/N):','s');
    switch inquiry
        case {'Y','y'}
            eval(['!rm ',Save_dir,'defaultParams.mat']);
        case {'N','n'}
            return;
    end
end
    
%% a). Behavior profile
% i). Jong's new 4POP task
taskSet.FourPOP.Name='4POP';%name of the task: '4POP'

%Phase_col_titles={'Phase_Name','Markers','Event_Time',...
%     'Marker_Onset','Buffer'};
taskSet.FourPOP.Phase={...
    'Cue',{5 6}, [0 0.5 2.5],[-1.0 0.2],'ON';...
    'Probe',{20 21 22 23 30 31 32 33},[0 0.5 1.5],[-1.0 0.2],'ON';...
    'Whole',{5,6},[0 0.5 2.5 3.0 4.0 5.0],[-1.0 0],'ON';...
    };
taskSet.FourPOP.Conditions={...
    'Red',[6 30 31 32 33];...
    'Green',[5 20 21 22 23];...
    'LeftArrow',[20 21 30 31];...
    'RightArrow',[22 23 32 33];...
    'Short',[20 22 30 32];...
    'Long',[21 23 31 33]};
taskSet.FourPOP.Accuracy={'No_response',10;...
    'Correct',11;...
    'Incorrect',12};

% ii). Stroop task (current created but not set)
taskSet.Stroop.Name='Stroop';%name of the task: 'Stroop'
taskSet.Stroop.Phase={};%conditions of the task
taskSet.Stroop.Conditions={'ink',[];'word',[]};

% iii). Jong's Working Memory (WM) task
taskSet.WM.Name='WM';%name of the task: 'Working Memory (WM)'
taskSet.WM.Phase={...
    'Cue',...
    {31 32 33 34 35 36},[-2.0 -1.0 0 4.0],[-0.4 0.5],'OFF';...
    'Probe',...
    {41 42 43 44 45 46 51 52 53 54 55 56},[0 2.0],[-0.4 0.5],'ON';...
    'Whole',...
    {31 32 33 34 35 36},[-2.0 -1.0 0 4.0 5.0],[-0.4 0.5],'OFF';
     };
%Cond_col_names={'Condition_Name','Markers','Time_Shift_in_Phase'}
taskSet.WM.Conditions={...
    'TwoFace',[33 34 43 44 53 54],-2.0;...
    'OneFace',[31 32 41 42 51 52],-1.0;...
    'Control',[35 36 45 46 55 56],-2.0;...
    '2secITI',[31 33 35 41 43 45 51 53 55],0;...
    '3secITI',[32 34 36 42 44 46 52 54 56],0;...
    'incongruent',[51 52 53 54 55 56],0;...
    'congruent',[41 42 43 44 45 46],0 ...
    };
taskSet.WM.Accuracy={'No_response',13;...
    'Correct',14;...
    'Incorrect',15};
%Condition of a task
Dict.Conditions={'incong','cong','contrast'};
%% b). Time Frequency parameters
%frequency bands
Frequency={...
    'gamma',[30 80],6;...%band name,frequency range(Hz),cycles
    'theta',[4 8],2;...
    'theta_thru_beta',[4 30],[2,6];...
    'theta_thru_gamma',[4 80],[2,6]};
%converting to dictionary
Dict.Frequency=Table2Struct(...
    vertcat({'band','frequency','cycles'},Frequency),2);
%% c). Electrode anatomy parameters
%Brain region represneted by the electrodes (64)
Region={...
    'whole_brain',1:1:63;...
    'all_PFC',1:1:23;...
    'left_PFC',[1 4 6 7 8 15 16 17];...
    'mid_PFC', [2 9 10 11 18 19 20];...
    'right_PFC',[3 5 12 13 14 21 22 23];...
    'all_Central',[24:1:32,34:1:42];...
    'left_Central',[24 25 26 34 35 36];...
    'mid_Central', [27 28 29 37 38 39];...
    'right_Central',[30 31 32 40 41 42];...
    'all_Post',[44:1:59,61:1:63];...
    'left_Post',[44 45 46 53 54];...
    'mid_Post', [47 48 49 55 56 57 61 62 63];...
    'right_Post',[50 51 52 58 59]};

%converting field to dictionary
Dict.Region64=cell2struct(Region(:,2),Region(:,1),1);
%% Save the defualt paramters to a .mat file
save([Save_dir,'defaultParams.mat'],'Dict','taskSet');
disp('A default parameter module is created at:');
disp([Save_dir,'defaultParams.mat']);
end